plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.152'
}

def secrets = new Properties()
def secretsFile = file('secrets.properties')
if (secretsFile.exists()) {
	secretsFile.withInputStream {
		stream -> secrets.load(stream)
	}

	fileTree("secrets").matching {
		include "**/*.properties"
	}.each {
		File file ->
			file.withInputStream {
				stream -> secrets.load(stream)
			}
	}
}

idea {
	// Tell IDEA to always download sources/javadoc artifacts from maven.
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

version = mod_version
group = 'org.angrypixel'
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(21)
minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
//minecraft.accessTransformers.file('src/main/resources/META-INF/accesstransformer.cfg')
compileJava.options.compilerArgs << "-Xlint:all,-classfile,-processing,-deprecation,-this-escape" << "-Werror"

runs {
    configureEach {
        modSource project.sourceSets.main
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', mod_id
		programArguments.addAll '--username', secrets.getProperty("username") ?: 'Dev', secrets.getProperty("uuid") ? '--uuid' : '', secrets.getProperty("uuid") ?: ''
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', mod_id
		programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', mod_id
    }

    data {
		workingDirectory project.file('run-data')
        programArguments.addAll '--mod', mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
	mavenLocal()
	maven {
		name 'Jared\'s Maven' // JEI
		url 'https://maven.blamejared.com/'
	}
}

dependencies {
    implementation "net.neoforged:neoforge:${project.neoforge_version}"

	implementation "mezz.jei:jei-${project.minecraft_version}-neoforge:${project.jei_version}"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : "angrypixel",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "angrypixel",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
