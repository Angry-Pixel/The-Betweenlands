package thebetweenlands.common.registries;

import net.minecraft.core.registries.Registries;
import net.minecraft.network.chat.Component;
import net.minecraft.world.item.CreativeModeTab;
import net.minecraft.world.item.CreativeModeTabs;
import net.minecraft.world.item.ItemStack;
import net.neoforged.neoforge.event.BuildCreativeModeTabContentsEvent;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.registries.DeferredRegister;
import thebetweenlands.common.TheBetweenlands;

//TODO since we have full control of tab placement consider reorganizing the contents. Theyre currently the same as they were in 1.12
public class CreativeGroupRegistry {

	public static final DeferredRegister<CreativeModeTab> CREATIVE_TABS = DeferredRegister.create(Registries.CREATIVE_MODE_TAB, TheBetweenlands.ID);

	// Blocks tab
	public static final DeferredHolder<CreativeModeTab, CreativeModeTab> BETWEENLANDS_BLOCKS = CREATIVE_TABS.register("blocks", CreativeModeTab.builder()
		.title(Component.translatable("itemGroup.thebetweenlands.blocks"))
		.icon(() -> new ItemStack(BlockRegistry.SWAMP_GRASS))
		.displayItems((parameters, output) -> {
			output.accept(BlockRegistry.DRUID_STONE_1);
			output.accept(BlockRegistry.DRUID_STONE_2);
			output.accept(BlockRegistry.DRUID_STONE_3);
			output.accept(BlockRegistry.DRUID_STONE_4);
			output.accept(BlockRegistry.DRUID_STONE_5);
			output.accept(BlockRegistry.DRUID_STONE_6);
			output.accept(BlockRegistry.BETWEENLANDS_BEDROCK);
			output.accept(BlockRegistry.BETWEENSTONE);
			output.accept(BlockRegistry.CORRUPT_BETWEENSTONE);
			output.accept(BlockRegistry.MUD);
			output.accept(BlockRegistry.PEAT);
			output.accept(BlockRegistry.SMOULDERING_PEAT);
			output.accept(BlockRegistry.SLUDGY_DIRT);
//			output.accept(BlockRegistry.SPREADING_SLUDGY_DIRT);
			output.accept(BlockRegistry.SLIMY_DIRT);
			output.accept(BlockRegistry.SLIMY_GRASS);
			output.accept(BlockRegistry.CRAGROCK);
			output.accept(BlockRegistry.MOSSY_CRAGROCK_TOP);
			output.accept(BlockRegistry.MOSSY_CRAGROCK_BOTTOM);
			output.accept(BlockRegistry.PITSTONE);
			output.accept(BlockRegistry.LIMESTONE);
			output.accept(BlockRegistry.SWAMP_DIRT);
			output.accept(BlockRegistry.COARSE_SWAMP_DIRT);
			output.accept(BlockRegistry.SWAMP_GRASS);
			output.accept(BlockRegistry.WISP);
			output.accept(BlockRegistry.OCTINE_ORE);
			output.accept(BlockRegistry.VALONITE_ORE);
			output.accept(BlockRegistry.SULFUR_ORE);
			output.accept(BlockRegistry.SLIMY_BONE_ORE);
			output.accept(BlockRegistry.SCABYST_ORE);
			output.accept(BlockRegistry.SYRMORITE_ORE);
			output.accept(BlockRegistry.AQUA_MIDDLE_GEM_ORE);
			output.accept(BlockRegistry.CRIMSON_MIDDLE_GEM_ORE);
			output.accept(BlockRegistry.GREEN_MIDDLE_GEM_ORE);
////			output.accept(BlockRegistry.LIFE_CRYSTAL_STALACTITE);
////			output.accept(BlockRegistry.LIFE_CRYSTAL_ORE);
////			output.accept(BlockRegistry.STALACTITE);
//			output.accept(BlockRegistry.SILT);
//			output.accept(BlockRegistry.FILTERED_SILT);
//			output.accept(BlockRegistry.DEAD_GRASS);
//			output.accept(BlockRegistry.SOLID_TAR);
////			output.accept(BlockRegistry.PUDDLE);
//			output.accept(BlockRegistry.PEARL_BLOCK);
//			output.accept(BlockRegistry.ANCIENT_REMNANT_BLOCK);
//			output.accept(BlockRegistry.WEEDWOOD_LOG);
//			output.accept(BlockRegistry.WEEDWOOD_BARK);
//			output.accept(BlockRegistry.ROTTEN_BARK);
////			output.accept(BlockRegistry.SPREADING_ROTTEN_BARK);
//			output.accept(BlockRegistry.RUBBER_LOG);
//			output.accept(BlockRegistry.HEARTHGROVE_LOG);
//			output.accept(BlockRegistry.TARRED_HEARTHGROVE_LOG);
//			output.accept(BlockRegistry.HEARTHGROVE_BARK);
//			output.accept(BlockRegistry.TARRED_HEARTHGROVE_BARK);
//			output.accept(BlockRegistry.NIBBLETWIG_LOG);
//			output.accept(BlockRegistry.NIBBLETWIG_BARK);
//			output.accept(BlockRegistry.SPIRIT_TREE_LOG);
//			output.accept(BlockRegistry.SPIRIT_TREE_BARK);
//			output.accept(BlockRegistry.WEEDWOOD);
//			output.accept(BlockRegistry.SAP_LOG);
//			output.accept(BlockRegistry.SAP_BARK);
//			output.accept(BlockRegistry.WEEDWOOD_LEAVES);
//			output.accept(BlockRegistry.SAP_LEAVES);
//			output.accept(BlockRegistry.RUBBER_TREE_LEAVES);
//			output.accept(BlockRegistry.HEARTHGROVE_LEAVES);
//			output.accept(BlockRegistry.NIBBLETWIG_LEAVES);
//			output.accept(BlockRegistry.TOP_SPIRIT_TREE_LEAVES);
//			output.accept(BlockRegistry.MIDDLE_SPIRIT_TREE_LEAVES);
//			output.accept(BlockRegistry.BOTTOM_SPIRIT_TREE_LEAVES);
//			output.accept(BlockRegistry.WEEDWOOD_PLANKS);
//			output.accept(BlockRegistry.RUBBER_TREE_PLANKS);
//			output.accept(BlockRegistry.GIANT_ROOT_PLANKS);
//			output.accept(BlockRegistry.HEARTHGROVE_PLANKS);
//			output.accept(BlockRegistry.NIBBLETWIG_PLANKS);
//			output.accept(BlockRegistry.ANGRY_BETWEENSTONE);
//			output.accept(BlockRegistry.BETWEENSTONE_BRICKS);
//			output.accept(BlockRegistry.MIRAGE_BETWEENSTONE_BRICKS);
//			output.accept(BlockRegistry.BETWEENSTONE_TILES);
//			output.accept(BlockRegistry.CHISELED_BETWEENSTONE);
//			output.accept(BlockRegistry.CHISELED_CRAGROCK);
//			output.accept(BlockRegistry.CRACKED_CHISELED_CRAGROCK);
//			output.accept(BlockRegistry.MOSSY_CHISELED_CRAGROCK);
//			output.accept(BlockRegistry.CHISELED_LIMESTONE);
//			output.accept(BlockRegistry.CHISELED_PITSTONE);
//			output.accept(BlockRegistry.CHISELED_SCABYST_1);
//			output.accept(BlockRegistry.CHISELED_SCABYST_2);
//			output.accept(BlockRegistry.CHISELED_SCABYST_3);
//			output.accept(BlockRegistry.DOTTED_SCABYST_PITSTONE);
//			output.accept(BlockRegistry.HORIZONTAL_SCABYST_PITSTONE);
//			output.accept(BlockRegistry.SCABYST_BRICKS);
//			output.accept(BlockRegistry.CRACKED_BETWEENSTONE_BRICKS);
//			output.accept(BlockRegistry.CRACKED_BETWEENSTONE_TILES);
//			output.accept(BlockRegistry.CRACKED_LIMESTONE_BRICKS);
//			output.accept(BlockRegistry.CRAGROCK_BRICKS);
//			output.accept(BlockRegistry.CRACKED_CRAGROCK_BRICKS);
//			output.accept(BlockRegistry.MOSSY_CRAGROCK_BRICKS);
//			output.accept(BlockRegistry.CRAGROCK_TILES);
//			output.accept(BlockRegistry.CRACKED_CRAGROCK_TILES);
//			output.accept(BlockRegistry.MOSSY_CRAGROCK_TILES);
//			output.accept(BlockRegistry.MUD_BRICKS);
//			output.accept(BlockRegistry.MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.RUBBER_BLOCK);
//			output.accept(BlockRegistry.PITSTONE_BRICKS);
//			output.accept(BlockRegistry.PITSTONE_TILES);
//			output.accept(BlockRegistry.POLISHED_LIMESTONE);
//			output.accept(BlockRegistry.SMOOTH_BETWEENSTONE);
//			output.accept(BlockRegistry.SMOOTH_CRAGROCK);
//			output.accept(BlockRegistry.OCTINE_BLOCK);
//			output.accept(BlockRegistry.SYRMORITE_BLOCK);
//			output.accept(BlockRegistry.VALONITE_BLOCK);
//			output.accept(BlockRegistry.SCABYST_BLOCK);
//			output.accept(BlockRegistry.WEAK_BETWEENSTONE_TILES);
//			output.accept(BlockRegistry.WEAK_POLISHED_LIMESTONE);
//			output.accept(BlockRegistry.WEAK_MOSSY_BETWEENSTONE_TILES);
//			output.accept(BlockRegistry.WEAK_SMOOTH_CRAGROCK);
//			output.accept(BlockRegistry.GREEN_DENTROTHYST);
//			output.accept(BlockRegistry.ORANGE_DENTROTHYST);
//			output.accept(BlockRegistry.LOOT_POT_1);
//			output.accept(BlockRegistry.LOOT_POT_2);
//			output.accept(BlockRegistry.LOOT_POT_3);
////			output.accept(BlockRegistry.MONSTER_SPAWNER);
//			output.accept(BlockRegistry.TEMPLE_PILLAR);
//			output.accept(BlockRegistry.BETWEENSTONE_PILLAR);
//			output.accept(BlockRegistry.PITSTONE_PILLAR);
//			output.accept(BlockRegistry.LIMESTONE_PILLAR);
//			output.accept(BlockRegistry.CRAGROCK_PILLAR);
////			output.accept(BlockRegistry.TAR_BEAST_SPAWNER);
//			output.accept(BlockRegistry.TAR_LOOT_POT_1);
//			output.accept(BlockRegistry.TAR_LOOT_POT_2);
//			output.accept(BlockRegistry.TAR_LOOT_POT_3);
//			output.accept(BlockRegistry.CRAGROCK_STAIRS);
//			output.accept(BlockRegistry.PITSTONE_STAIRS);
//			output.accept(BlockRegistry.BETWEENSTONE_STAIRS);
//			output.accept(BlockRegistry.BETWEENSTONE_BRICK_STAIRS);
//			output.accept(BlockRegistry.MUD_BRICK_STAIRS);
//			output.accept(BlockRegistry.CRAGROCK_BRICK_STAIRS);
//			output.accept(BlockRegistry.LIMESTONE_BRICK_STAIRS);
//			output.accept(BlockRegistry.PITSTONE_BRICK_STAIRS);
//			output.accept(BlockRegistry.LIMESTONE_STAIRS);
//			output.accept(BlockRegistry.SMOOTH_BETWEENSTONE_STAIRS);
//			output.accept(BlockRegistry.SMOOTH_CRAGROCK_STAIRS);
//			output.accept(BlockRegistry.POLISHED_LIMESTONE_STAIRS);
//			output.accept(BlockRegistry.MOSSY_BETWEENSTONE_BRICK_STAIRS);
//			output.accept(BlockRegistry.MOSSY_SMOOTH_BETWEENSTONE_STAIRS);
//			output.accept(BlockRegistry.CRACKED_BETWEENSTONE_BRICK_STAIRS);
//			output.accept(BlockRegistry.SCABYST_BRICK_STAIRS);
//			output.accept(BlockRegistry.SULFUR_BLOCK);
//			output.accept(BlockRegistry.TEMPLE_BRICKS);
//			output.accept(BlockRegistry.SMOOTH_PITSTONE);
//			output.accept(BlockRegistry.MIRE_CORAL_BLOCK);
//			output.accept(BlockRegistry.DEEP_WATER_CORAL_BLOCK);
//			output.accept(BlockRegistry.SLIMY_BONE_BLOCK);
//			output.accept(BlockRegistry.AQUA_MIDDLE_GEM_BLOCK);
//			output.accept(BlockRegistry.CRIMSON_MIDDLE_GEM_BLOCK);
//			output.accept(BlockRegistry.GREEN_MIDDLE_GEM_BLOCK);
//			output.accept(BlockRegistry.COMPOST_BLOCK);
//			output.accept(BlockRegistry.POLISHED_GREEN_DENTROTHYST);
//			output.accept(BlockRegistry.POLISHED_ORANGE_DENTROTHYST);
//			output.accept(BlockRegistry.SILT_GLASS);
//			output.accept(BlockRegistry.SILT_GLASS_PANE);
//			output.accept(BlockRegistry.LATTICE);
//			output.accept(BlockRegistry.FINE_LATTICE);
//			output.accept(BlockRegistry.FILTERED_SILT_GLASS);
//			output.accept(BlockRegistry.FILTERED_SILT_GLASS_PANE);
//			output.accept(BlockRegistry.POLISHED_GREEN_DENTROTHYST_PANE);
//			output.accept(BlockRegistry.POLISHED_ORANGE_DENTROTHYST_PANE);
//			output.accept(BlockRegistry.CONNECTED_AMATE_PAPER_PANE);
//			output.accept(BlockRegistry.SQUARED_AMATE_PAPER_PANE);
//			output.accept(BlockRegistry.ROUNDED_AMATE_PAPER_PANE);
//			output.accept(BlockRegistry.SMOOTH_PITSTONE_STAIRS);
//			output.accept(BlockRegistry.SOLID_TAR_STAIRS);
//			output.accept(BlockRegistry.TEMPLE_BRICK_STAIRS);
//			output.accept(BlockRegistry.SPIKE_TRAP);
//			output.accept(BlockRegistry.WEEDWOOD_STAIRS);
//			output.accept(BlockRegistry.RUBBER_TREE_STAIRS);
//			output.accept(BlockRegistry.GIANT_ROOT_STAIRS);
//			output.accept(BlockRegistry.HEARTHGROVE_STAIRS);
//			output.accept(BlockRegistry.NIBBLETWIG_STAIRS);
//			output.accept(BlockRegistry.POSSESSED_BLOCK);
//			output.accept(BlockRegistry.ITEM_CAGE);
//			output.accept(BlockRegistry.ITEM_SHELF);
//			output.accept(BlockRegistry.THATCH);
//			output.accept(BlockRegistry.CRAGROCK_SLAB);
//			output.accept(BlockRegistry.PITSTONE_SLAB);
//			output.accept(BlockRegistry.BETWEENSTONE_SLAB);
//			output.accept(BlockRegistry.SMOOTH_PITSTONE_SLAB);
//			output.accept(BlockRegistry.SOLID_TAR_SLAB);
//			output.accept(BlockRegistry.TEMPLE_BRICK_SLAB);
//			output.accept(BlockRegistry.BETWEENSTONE_BRICK_SLAB);
//			output.accept(BlockRegistry.MUD_BRICK_SLAB);
//			output.accept(BlockRegistry.CRAGROCK_BRICK_SLAB);
//			output.accept(BlockRegistry.LIMESTONE_BRICK_SLAB);
//			output.accept(BlockRegistry.LIMESTONE_SLAB);
//			output.accept(BlockRegistry.SMOOTH_BETWEENSTONE_SLAB);
//			output.accept(BlockRegistry.SMOOTH_CRAGROCK_SLAB);
//			output.accept(BlockRegistry.POLISHED_LIMESTONE_SLAB);
//			output.accept(BlockRegistry.PITSTONE_BRICK_SLAB);
//			output.accept(BlockRegistry.MOSSY_BETWEENSTONE_BRICK_SLAB);
//			output.accept(BlockRegistry.MOSSY_SMOOTH_BETWEENSTONE_SLAB);
//			output.accept(BlockRegistry.CRACKED_BETWEENSTONE_BRICK_SLAB);
//			output.accept(BlockRegistry.WEEDWOOD_SLAB);
//			output.accept(BlockRegistry.RUBBER_TREE_SLAB);
//			output.accept(BlockRegistry.GIANT_ROOT_SLAB);
//			output.accept(BlockRegistry.HEARTHGROVE_SLAB);
//			output.accept(BlockRegistry.NIBBLETWIG_SLAB);
//			output.accept(BlockRegistry.MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.MUD_BRICK_SHINGLE_WALL);
//			output.accept(BlockRegistry.DULL_LAVENDER_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.MAROON_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.SHADOW_GREEN_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.CAMELOT_MAGENTA_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.SAFFRON_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.CARIBBEAN_GREEN_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.VIVID_TANGERINE_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.CHAMPAGNE_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.RAISIN_BLACK_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.SUSHI_GREEN_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.ELM_CYAN_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.CADMIUM_GREEN_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.LAVENDER_BLUE_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.BROWN_RUST_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.MIDNIGHT_PURPLE_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.PEWTER_GREY_FILTERED_SILT_GLASS_BLOCK);
//			output.accept(BlockRegistry.DULL_LAVENDER_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.MAROON_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.SHADOW_GREEN_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.CAMELOT_MAGENTA_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.SAFFRON_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.CARIBBEAN_GREEN_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.VIVID_TANGERINE_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.CHAMPAGNE_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.RAISIN_BLACK_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.SUSHI_GREEN_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.ELM_CYAN_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.CADMIUM_GREEN_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.LAVENDER_BLUE_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.BROWN_RUST_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.MIDNIGHT_PURPLE_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.PEWTER_GREY_MUD_BRICK_SHINGLES);
//			output.accept(BlockRegistry.DULL_LAVENDER_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.MAROON_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.SHADOW_GREEN_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.CAMELOT_MAGENTA_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.SAFFRON_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.CARIBBEAN_GREEN_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.VIVID_TANGERINE_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.CHAMPAGNE_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.RAISIN_BLACK_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.SUSHI_GREEN_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.ELM_CYAN_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.CADMIUM_GREEN_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.LAVENDER_BLUE_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.BROWN_RUST_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.MIDNIGHT_PURPLE_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.PEWTER_GREY_MUD_BRICK_SHINGLE_SLAB);
//			output.accept(BlockRegistry.DULL_LAVENDER_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.MAROON_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.SHADOW_GREEN_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.CAMELOT_MAGENTA_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.SAFFRON_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.CARIBBEAN_GREEN_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.VIVID_TANGERINE_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.CHAMPAGNE_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.RAISIN_BLACK_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.SUSHI_GREEN_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.ELM_CYAN_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.CADMIUM_GREEN_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.LAVENDER_BLUE_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.BROWN_RUST_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.MIDNIGHT_PURPLE_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.PEWTER_GREY_MUD_BRICK_SHINGLE_STAIRS);
//			output.accept(BlockRegistry.THATCH_SLAB);
//			output.accept(BlockRegistry.SCABYST_BRICK_SLAB);
//			output.accept(BlockRegistry.PITSTONE_WALL);
//			output.accept(BlockRegistry.BETWEENSTONE_WALL);
//			output.accept(BlockRegistry.SOLID_TAR_WALL);
//			output.accept(BlockRegistry.TEMPLE_BRICK_WALL);
//			output.accept(BlockRegistry.SMOOTH_PITSTONE_WALL);
//			output.accept(BlockRegistry.BETWEENSTONE_BRICK_WALL);
//			output.accept(BlockRegistry.MUD_BRICK_WALL);
//			output.accept(BlockRegistry.CRAGROCK_WALL);
//			output.accept(BlockRegistry.CRAGROCK_BRICK_WALL);
//			output.accept(BlockRegistry.LIMESTONE_BRICK_WALL);
//			output.accept(BlockRegistry.LIMESTONE_WALL);
//			output.accept(BlockRegistry.POLISHED_LIMESTONE_WALL);
//			output.accept(BlockRegistry.PITSTONE_BRICK_WALL);
//			output.accept(BlockRegistry.SMOOTH_BETWEENSTONE_WALL);
//			output.accept(BlockRegistry.SMOOTH_CRAGROCK_WALL);
//			output.accept(BlockRegistry.MOSSY_BETWEENSTONE_BRICK_WALL);
//			output.accept(BlockRegistry.MOSSY_SMOOTH_BETWEENSTONE_WALL);
//			output.accept(BlockRegistry.CRACKED_BETWEENSTONE_BRICK_WALL);
//			output.accept(BlockRegistry.SCABYST_BRICK_WALL);
//			output.accept(BlockRegistry.WEEDWOOD_FENCE);
//			output.accept(BlockRegistry.WEEDWOOD_LOG_FENCE);
//			output.accept(BlockRegistry.RUBBER_TREE_FENCE);
//			output.accept(BlockRegistry.GIANT_ROOT_FENCE);
//			output.accept(BlockRegistry.HEARTHGROVE_FENCE);
//			output.accept(BlockRegistry.NIBBLETWIG_FENCE);
//			output.accept(BlockRegistry.WEEDWOOD_FENCE_GATE);
//			output.accept(BlockRegistry.WEEDWOOD_LOG_FENCE_GATE);
//			output.accept(BlockRegistry.RUBBER_TREE_FENCE_GATE);
//			output.accept(BlockRegistry.GIANT_ROOT_FENCE_GATE);
//			output.accept(BlockRegistry.HEARTHGROVE_FENCE_GATE);
//			output.accept(BlockRegistry.NIBBLETWIG_FENCE_GATE);
//			output.accept(BlockRegistry.WEEDWOOD_PRESSURE_PLATE);
//			output.accept(BlockRegistry.BETWEENSTONE_PRESSURE_PLATE);
//			output.accept(BlockRegistry.SYRMORITE_PRESSURE_PLATE);
//			output.accept(BlockRegistry.WEEDWOOD_BUTTON);
//			output.accept(BlockRegistry.BETWEENSTONE_BUTTON);
//			output.accept(BlockRegistry.WEEDWOOD_LADDER);
//			output.accept(BlockRegistry.WEEDWOOD_LEVER);
//			output.accept(BlockRegistry.MUD_LOOT_POT_1);
//			output.accept(BlockRegistry.MUD_LOOT_POT_2);
//			output.accept(BlockRegistry.MUD_LOOT_POT_3);
//			output.accept(BlockRegistry.WORM_PILLAR);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_1);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_2);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_3);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_4);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_5);
//			output.accept(BlockRegistry.WORM_PILLAR_TOP);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_TOP_1);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_TOP_2);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_TOP_3);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_TOP_4);
//			output.accept(BlockRegistry.SLUDGY_WORM_PILLAR_TOP_5);
//			output.accept(BlockRegistry.COMPACTED_MUD);
//			output.accept(BlockRegistry.MUD_TILES);
//			output.accept(BlockRegistry.DECAYED_MUD_TILES);
//			output.accept(BlockRegistry.CRACKED_MUD_TILES);
//			output.accept(BlockRegistry.CRACKED_DECAYED_MUD_TILES);
//			output.accept(BlockRegistry.PUFFSHROOM);
//			output.accept(BlockRegistry.CARVED_MUD_BRICKS);
//			output.accept(BlockRegistry.SLUDGY_CARVED_MUD_BRICKS_1);
//			output.accept(BlockRegistry.SLUDGY_CARVED_MUD_BRICKS_2);
//			output.accept(BlockRegistry.SLUDGY_CARVED_MUD_BRICKS_3);
//			output.accept(BlockRegistry.SLUDGY_CARVED_MUD_BRICKS_4);
//			output.accept(BlockRegistry.CARVED_MUD_BRICK_EDGE);
//			output.accept(BlockRegistry.SLUDGY_CARVED_MUD_BRICK_EDGE_1);
//			output.accept(BlockRegistry.SLUDGY_CARVED_MUD_BRICK_EDGE_2);
//			output.accept(BlockRegistry.SLUDGY_CARVED_MUD_BRICK_EDGE_3);
//			output.accept(BlockRegistry.SLUDGY_CARVED_MUD_BRICK_EDGE_4);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICKS_1);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICKS_2);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICKS_3);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICKS_4);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICK_STAIRS_1);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICK_STAIRS_2);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICK_STAIRS_3);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICK_STAIRS_4);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICK_SLAB_1);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICK_SLAB_2);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICK_SLAB_3);
//			output.accept(BlockRegistry.SLUDGY_MUD_BRICK_SLAB_4);
//			output.accept(BlockRegistry.BEAM_RELAY);
//			output.accept(BlockRegistry.BEAM_TUBE);
//			output.accept(BlockRegistry.BEAM_LENS_SUPPORT);
//			output.accept(BlockRegistry.MUD_BRICK_ALCOVE);
//			output.accept(BlockRegistry.LOOT_URN_1);
//			output.accept(BlockRegistry.LOOT_URN_2);
//			output.accept(BlockRegistry.LOOT_URN_3);
//			output.accept(BlockRegistry.DUNGEON_DOOR_RUNES);
//			output.accept(BlockRegistry.MIMIC_DUNGEON_DOOR_RUNES);
//			output.accept(BlockRegistry.CRAWLER_DUNGEON_DOOR_RUNES);
//			output.accept(BlockRegistry.DUNGEON_DOOR_COMBINATION);
//			output.accept(BlockRegistry.CLIMBABLE_MUD_BRICKS);
//			output.accept(BlockRegistry.BROKEN_MUD_TILES);
//			output.accept(BlockRegistry.DUNGEON_WALL_CANDLE);
//			output.accept(BlockRegistry.WOODEN_SUPPORT_BEAM_1);
//			output.accept(BlockRegistry.WOODEN_SUPPORT_BEAM_2);
//			output.accept(BlockRegistry.WOODEN_SUPPORT_BEAM_3);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_1);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_2);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_3);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_4);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_5);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_6);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_7);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_8);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_9);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_10);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_11);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_12);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_13);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_14);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_15);
//			output.accept(BlockRegistry.CARVED_ROTTEN_BARK_16);
//			output.accept(BlockRegistry.MUD_BRICK_SPIKE_TRAP);
//			output.accept(BlockRegistry.MUD_TILES_SPIKE_TRAP);
//			output.accept(BlockRegistry.COMPACTED_MUD_SLOPE);
//			output.accept(BlockRegistry.COMPACTED_MUD_SLAB);
//			output.accept(BlockRegistry.COMPACTED_MUD_MIRAGE);
//			output.accept(BlockRegistry.ROTTEN_PLANKS);
//			output.accept(BlockRegistry.ROTTEN_SLAB);
//			output.accept(BlockRegistry.ROTTEN_STAIRS);
//			output.accept(BlockRegistry.ROTTEN_FENCE);
//			output.accept(BlockRegistry.ROTTEN_FENCE_GATE);
//			output.accept(BlockRegistry.BRAZIER);
//			output.accept(BlockRegistry.BULB_CAPPED_MUSHROOM_CAP);
//			output.accept(BlockRegistry.BULB_CAPPED_MUSHROOM_STALK);
//			output.accept(BlockRegistry.SHELF_FUNGUS);
////			output.accept(BlockRegistry.ROOT);
//			output.accept(BlockRegistry.GIANT_ROOT);
//			output.accept(BlockRegistry.HOLLOW_LOG);
//			//TODO finish before pushing block commit
		})::build);

	public static final DeferredHolder<CreativeModeTab, CreativeModeTab> BETWEENLANDS_ITEMS = CREATIVE_TABS.register("items", () -> CreativeModeTab.builder()
		.title(Component.translatable("itemGroup.thebetweenlands.items"))
		.build());

	public static final DeferredHolder<CreativeModeTab, CreativeModeTab> BETWEENLANDS_GEAR = CREATIVE_TABS.register("gear", () -> CreativeModeTab.builder()
		.title(Component.translatable("itemGroup.thebetweenlands.gear"))
		.build());

	//Special tab
	public static final DeferredHolder<CreativeModeTab, CreativeModeTab> BETWEENLANDS_SPECIAL = CREATIVE_TABS.register("specials", () -> CreativeModeTab.builder()
		.title(Component.translatable("itemGroup.thebetweenlands.specials"))
		.icon(() -> new ItemStack(ItemRegistry.RECORD_ASTATOS.get()))
		.displayItems((parameters, output) -> {
//			output.accept(ItemRegistry.SKULL_MASK);
//			output.accept(ItemRegistry.EXPLORERS_HAT);
//			output.accept(ItemRegistry.LARGE_SPIRIT_TREE_MASK);
//			output.accept(ItemRegistry.SMALL_SPIRIT_TREE_MASK);
//			output.accept(ItemRegistry.SMALL_SPIRIT_TREE_MASK_ANIMATED);
//			output.accept(ItemRegistry.SMALL_GALLERY_FRAME);
//			output.accept(ItemRegistry.LARGE_GALLERY_FRAME);
//			output.accept(ItemRegistry.VERY_LARGE_GALLERY_FRAME);
//			output.accept(ItemRegistry.SILK_MASK);
//			output.accept(ItemRegistry.WIGHTS_BANE);
//			output.accept(ItemRegistry.SLUDGE_SLICER);
//			output.accept(ItemRegistry.CRITTER_CRUNCHER);
//			output.accept(ItemRegistry.HAG_HACKER);
//			output.accept(ItemRegistry.VOODOO_DOLL);
//			output.accept(ItemRegistry.SWIFT_PICK);
//			output.accept(ItemRegistry.CHIROBARB_ERUPTER);
//			output.accept(ItemRegistry.CHIROBARB_SHOCK_ERUPTER);
//			output.accept(ItemRegistry.MIST_STAFF);
//			output.accept(ItemRegistry.SHADOW_STAFF);
			output.accept(ItemRegistry.RECORD_ASTATOS);
			output.accept(ItemRegistry.RECORD_BETWEEN_YOU_AND_ME);
			output.accept(ItemRegistry.RECORD_CHRISTMAS_ON_THE_MARSH);
			output.accept(ItemRegistry.RECORD_THE_EXPLORER);
			output.accept(ItemRegistry.RECORD_HAG_DANCE);
			output.accept(ItemRegistry.RECORD_LONELY_FIRE);
			output.accept(ItemRegistry.MYSTERIOUS_RECORD);
			output.accept(ItemRegistry.RECORD_ANCIENT);
			output.accept(ItemRegistry.RECORD_BENEATH_A_GREEN_SKY);
			output.accept(ItemRegistry.RECORD_DJ_WIGHTS_MIXTAPE);
			output.accept(ItemRegistry.RECORD_ONWARDS);
			output.accept(ItemRegistry.RECORD_STUCK_IN_THE_MUD);
			output.accept(ItemRegistry.RECORD_WANDERING_WISPS);
			output.accept(ItemRegistry.RECORD_WATERLOGGED);
			output.accept(ItemRegistry.AMATE_MAP);
		}).build());

	// Plants tab
	public static final DeferredHolder<CreativeModeTab, CreativeModeTab> BETWEENLANDS_PLANTS = CREATIVE_TABS.register("plants", () -> CreativeModeTab.builder()
		.title(Component.translatable("itemGroup.thebetweenlands.plants"))
		.icon(() -> new ItemStack(BlockRegistry.MIRE_CORAL))
		.displayItems((parameters, output) -> {
			output.accept(BlockRegistry.WEEDWOOD_SAPLING);
			output.accept(BlockRegistry.SAP_SAPLING);
			output.accept(BlockRegistry.RUBBER_SAPLING);
//			output.accept(BlockRegistry.HEARTHGROVE_SAPLING);
			output.accept(BlockRegistry.NIBBLETWIG_SAPLING);
//			output.accept(BlockRegistry.SPIRIT_TREE_SAPLING);
//			output.accept(ItemRegistry.ROOT_POD);
			output.accept(BlockRegistry.EDGE_SHROOM);
			output.accept(BlockRegistry.EDGE_MOSS);
			output.accept(BlockRegistry.EDGE_LEAF);
			output.accept(BlockRegistry.PITCHER_PLANT);
			output.accept(BlockRegistry.WEEPING_BLUE);
			output.accept(BlockRegistry.SUNDEW);
			output.accept(BlockRegistry.BLACK_HAT_MUSHROOM);
			output.accept(BlockRegistry.BULB_CAPPED_MUSHROOM);
			output.accept(BlockRegistry.FLATHEAD_MUSHROOM);
			output.accept(BlockRegistry.VENUS_FLY_TRAP);
			output.accept(BlockRegistry.VOLARPAD);
			output.accept(BlockRegistry.SWAMP_PLANT);
			output.accept(BlockRegistry.MIRE_CORAL);
			output.accept(BlockRegistry.DEEP_WATER_CORAL);
			output.accept(BlockRegistry.WATER_WEEDS);
			output.accept(BlockRegistry.ALGAE);
			output.accept(BlockRegistry.POISON_IVY);
			output.accept(BlockRegistry.ARROW_ARUM);
			output.accept(BlockRegistry.BLUE_EYED_GRASS);
			output.accept(BlockRegistry.BLUE_IRIS);
			output.accept(BlockRegistry.BONESET);
			output.accept(BlockRegistry.BOTTLE_BRUSH_GRASS);
			output.accept(BlockRegistry.BROOMSEDGE);
			output.accept(BlockRegistry.BUTTON_BUSH);
			output.accept(BlockRegistry.CARDINAL_FLOWER);
			output.accept(BlockRegistry.CATTAIL);
			output.accept(BlockRegistry.CAVE_GRASS);
			output.accept(BlockRegistry.COPPER_IRIS);
			output.accept(BlockRegistry.MARSH_HIBISCUS);
			output.accept(BlockRegistry.MARSH_MALLOW);
			output.accept(BlockRegistry.BLADDERWORT_FLOWER);
			output.accept(BlockRegistry.BLADDERWORT_STALK);
			output.accept(BlockRegistry.BOG_BEAN_FLOWER);
			output.accept(BlockRegistry.GOLDEN_CLUB_FLOWER);
			output.accept(BlockRegistry.MARSH_MARIGOLD_FLOWER);
			output.accept(BlockRegistry.TALL_SWAMP_GRASS);
			output.accept(BlockRegistry.MILKWEED);
			output.accept(BlockRegistry.NETTLE);
			output.accept(BlockRegistry.FLOWERED_NETTLE);
			output.accept(BlockRegistry.PICKERELWEED);
			output.accept(BlockRegistry.PHRAGMITES);
			output.accept(BlockRegistry.SHOOTS);
			output.accept(BlockRegistry.SLUDGECREEP);
			output.accept(BlockRegistry.TALL_SLUDGECREEP);
			output.accept(BlockRegistry.SOFT_RUSH);
			output.accept(BlockRegistry.THORNS);
			output.accept(BlockRegistry.TALL_CATTAIL);
			output.accept(BlockRegistry.SHORT_SWAMP_GRASS);
			output.accept(BlockRegistry.DEAD_WEEDWOOD_BUSH);
			output.accept(BlockRegistry.WEEDWOOD_BUSH);
			output.accept(BlockRegistry.STICK_NESTING_BLOCK);
			output.accept(BlockRegistry.BONE_NESTING_BLOCK);
			output.accept(BlockRegistry.CAVE_MOSS);
			output.accept(BlockRegistry.CRYPTWEED);
			output.accept(BlockRegistry.STRING_ROOTS);
			output.accept(BlockRegistry.PALE_GRASS);
			output.accept(BlockRegistry.ROTBULB);
			output.accept(BlockRegistry.MOSS);
			output.accept(BlockRegistry.DEAD_MOSS);
			output.accept(BlockRegistry.LICHEN);
			output.accept(BlockRegistry.DEAD_LICHEN);
			output.accept(BlockRegistry.HANGER);
			output.accept(BlockRegistry.SEEDED_HANGER);
			//TODO finish once bushes are done
		}).build());

	public static final DeferredHolder<CreativeModeTab, CreativeModeTab> BETWEENLANDS_HERBLORE = CREATIVE_TABS.register("herblore", () -> CreativeModeTab.builder()
		.title(Component.translatable("itemGroup.thebetweenlands.herblore"))
		.build());

	public static void populateTabs(BuildCreativeModeTabContentsEvent event) {
		if (event.getTabKey() == CreativeModeTabs.SPAWN_EGGS) {
			event.accept(ItemRegistry.SWAMP_HAG_SPAWN_EGG);
			event.accept(ItemRegistry.GECKO_SPAWN_EGG);
			event.accept(ItemRegistry.WIGHT_SPAWN_EGG);
		}
	}
}
