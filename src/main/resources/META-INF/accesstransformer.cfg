public net.minecraft.client.renderer.block.ModelBlockRenderer$AmbientOcclusionFace
public net.minecraft.client.gui.MapRenderer$MapInstance
public net.minecraft.world.level.saveddata.maps.MapItemSavedData <init>(IIBZZZLnet/minecraft/resources/ResourceKey;)V

#- MapItemSavedData
public net.minecraft.world.level.saveddata.maps.MapItemSavedData trackingPosition
public net.minecraft.world.level.saveddata.maps.MapItemSavedData unlimitedTracking

#- Dim type
public-f net.minecraft.world.level.dimension.DimensionType brightnessRamp
public net.minecraft.world.level.dimension.DimensionType <init>(Ljava/util/OptionalLong;ZZZZDZZZZZIIILnet/minecraft/tags/TagKey;Lnet/minecraft/resources/ResourceLocation;F)V #- Main constructor

#- Level
public-f net.minecraft.world.level.Level skyDarken

#- ClientLevel
public-f net.minecraft.client.multiplayer.ClientLevel chunkSource

#- ClientChunkCache
public-f net.minecraft.client.multiplayer.ClientChunkCache lightEngine

#- SkyLightEngine
public-f net.minecraft.world.level.lighting.SkyLightEngine #- SkyLightEngine class

#- LevelLightEngine
public-f net.minecraft.world.level.lighting.LevelLightEngine blockEngine
public-f net.minecraft.world.level.lighting.LevelLightEngine skyEngine

#- LayerLightEngine
public-f net.minecraft.world.level.lighting.LayerLightEngine layer

#- SkyLightSectionStorage
public net.minecraft.world.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap
public net.minecraft.world.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap currentLowestY
public net.minecraft.world.level.lighting.SkyLightSectionStorage$SkyDataLayerStorageMap topSections
public net.minecraft.world.level.lighting.SkyLightSectionStorage <init>(Lnet/minecraft/world/level/chunk/LightChunkGetter;)V
public net.minecraft.world.level.lighting.SkyLightSectionStorage getLightValue(JZ)I
public net.minecraft.world.level.lighting.SkyLightSectionStorage hasSectionsBelow(I)Z

#- LayerLightSectionStorage
public net.minecraft.world.level.lighting.LayerLightSectionStorage getLightValue(JZ)Lnet/minecraft/world/level/chunk/DataLayer;
public net.minecraft.world.level.lighting.LayerLightSectionStorage runAllUpdates()V
public net.minecraft.world.level.lighting.LayerLightSectionStorage storingLightForSection(J)Z

#- DynamicGraphMinFixedPoint
public net.minecraft.world.level.lighting.DynamicGraphMinFixedPoint checkEdge(JJIZ)V

#- SurfaceRules
public net.minecraft.world.level.levelgen.SurfaceRules$Condition #- Condition
public net.minecraft.world.level.levelgen.SurfaceRules$LazyYCondition #- LazyYCondition
public net.minecraft.world.level.levelgen.SurfaceRules$Context #- Context
public net.minecraft.world.level.levelgen.SurfaceRules$Context system
public net.minecraft.world.level.levelgen.SurfaceRules$Context context
public net.minecraft.world.level.levelgen.SurfaceRules$Context blockX
public net.minecraft.world.level.levelgen.SurfaceRules$Context blockY
public net.minecraft.world.level.levelgen.SurfaceRules$Context blockZ

public net.minecraft.world.level.levelgen.SurfaceSystem getOrCreateRandomFactory(Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;
